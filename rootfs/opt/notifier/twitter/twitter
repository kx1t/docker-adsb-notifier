#!/usr/bin/with-contenv bash

SERVICE="twitter"

# Use the following response conventions:
# "RESPCODE yyyymmdd-hhmmss-zzzz #servicename: info-text"
# Where:
# RESPCODE= 100 (info only), 102 (continue to process), 200 (done processing), 500 (fatal error)
# Date string can be obtained with $(date +"%Y%m%d-%H%M%S%z")
# Service name should be set as a constant
#
# Request parameters are passed to this service via the command line ($[@]) in the format "key=value"
#
# The notifier plugin writer is responsible to ensure that all notification processes finish properly.
# Notification execution should NOT be swapped to the background, but is allowed to block this process until done.
# Any output that is written to stdout from this process will be captured and made available to the requestor by
# POSTing "status=callback-handler" to "notify.php". The callback-handler was provided in the reponse
# to the original notification request.

MAXWAITTIME=60
echo "100 $(date +"%Y%m%d-%H%M%S%z") #${SERVICE}: cmdline args = ${@}"

# read parameters into arrays "key" and "value":
declare -A params
for Arg in "${a[@]}"; do params+=([${Arg%=*}]=${Arg#*=}); done

echo "102 $(date +"%Y%m%d-%H%M%S%z") #${SERVICE}: getting picture experiment"

STARTTIME="$(date +%s)"
while (( $(date +%s) < (STARTTIME + MAXWAITTIME) ))
do
  result="$(/opt/notifier/getscreenshot.sh "${param[icao]}" "${param[notifyproc]}")"
  returnvalue="$?"

  case "$returnvalue" in

    "0")
      echo "200 $(date +"%Y%m%d-%H%M%S%z") #${SERVICE}: file=${result}"
      break
    ;;

    "1")
      echo "102 $(date +"%Y%m%d-%H%M%S%z") #${SERVICE}: waiting $result"
      sleep "$result"
      continue
    ;;

    *)
      echo "500 $(date +"%Y%m%d-%H%M%S%z") #${SERVICE}: Exiting with test code $returnvalue"
      exit $returnvalue
    ;;
  esac
done

echo "200 $(date +"%Y%m%d-%H%M%S%z") #${SERVICE}: done, now we could do more stuff..."
exit 0
